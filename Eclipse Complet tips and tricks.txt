

KEY WORDS
===========

COPY CODE
SCRAP Book
External Tool Configuration
BREAKPOINT - Types
TEMPLATES 
CODE ASSIST / QUICK ASSIST / CONTENT ASSIST / 
REFACTORING
SAVE ACTION
STEP - FILTERING (debugging)
eclipse.ini
SNIPPET View
Github - Eclipse Templates 
ECLPSE - UMLLet   


Ctrl + F3
Ctrl + O
F4

================================================================

Navigation
===========

Open Any Resource				————-	Control + Shift + R
Navigate to already Openeded Editor		————- 	Control + E
Navigate to method in a class (outline) 	Control + O
Jump to Method, Class, Parameter Declaration	F3
Outline of Another class with out Navigation	F4

Question:
Open Any File
Navigate to method inside class
Outline of opened class
outline of other class
 Jump to class definition
Jump to Method Definition
Jump to Variable Declaration
View All Opened Files
Go to Last Edit
Go to Line No
Go to Next Error

Meaningful Variable
Complicated Method
To remove Comments


Code Generation
==================

Go For Template
Go For Code Assist


Repeated Action
================



Debugging
==========
Eclipse 

Double Click    ====> Toggle Breakpoint
Right Click Class	====>	Debug As  ====>  Java Application
F5, F6, F7, F8 

Breakpoint View 	———>  	Remove one or more Breakpoints
Breakpoint View 	———>	Skip All Break points
Breakpoint View 	———>	Add Java Exception Breakpoint
Variables View 		———>	drop down menu to display static variables, constants
Variables View		———>	Change the value at runtime
Variables View		———>	right click on the corresponding variable and select the new Detail Formatter
Watchpoint by 		———>	double-clicking on the left margin, next to the field declaration. 
Watchpoint		———>	Suspend on Field Acccess, Field Modification. 



========================================================================

Eclipse One time Set up

1. Server - tomcat
2. Maven
3. Eclipse
4. Maven Plugin
5. tomcat plugin
6. templates - Eclipse configuration
7. Create - Eclipse project with _____.  Save all Eclipse tips.
	Update in github.
	Conditional breakpoint. 
8. External tool Configuration.
9. Content Assist  — on typing. Preferences - Java - Editor — Content Assist. Auto Activation  Delay - 40. 
10. Install - Findug - through Help —> Market place or b drag and drop from Browser.
11. Install - Eclipse PMD
12. Install - ExploreFS or StartExlorer
13. Install - Jar2UML
14. Fast Writing Code - Using Eclipse 
15. Install - UML Designer
16. Eclipse - Check Style Plugin
17. Install - ECLEmma
18. Install - SpringIDE
19. Add Comments in the Java Class. (Eclipse tips - Run program. Last run - Last External run).



http://www.comscigate.com/debug/learn_Debug.htm   (**********)
http://www.comscigate.com/junit/learn_JUnit.htm
https://www.youtube.com/playlist?list=PLUGinutrSzN-ALgaL0mSyPDHi3VhUCcuV
http://eclipsetutorial.sourceforge.net/Total_Beginner_Companion_Document.pdf
http://users.ece.utexas.edu/~miryung/teaching/EE461L-Spring2012/labs/debugging.html
http://www.vogella.com/tutorials/EclipseDebugging/article.html#advanced
http://www.cavdar.net/2008/09/13/5-tips-for-debugging-java-code-in-eclipse/
http://www.vogella.com/tutorials/EclipseDebugging/article.html


Refactoring  (Effective use of eclpse)
===========

http://tkramar.blogspot.in/2007/10/effective-eclipse-i-setup.html
http://tkramar.blogspot.in/search/label/eclipse
http://help.eclipse.org/luna/index.jsp?topic=%2Forg.eclipse.jdt.doc.user%2Freference%2Fref-menu-refactor.htm

https://courses.cs.washington.edu/courses/cse143/11wi/eclipse-tutorial/junit.shtml


http://www.codejava.net/ides/eclipse/8-eclipse-shortcut-keys-for-code-refactoring
http://www.codejava.net/ides/eclipse/25-eclipse-shortcut-keys-for-code-editing
http://www.codejava.net/ides/eclipse/16-eclipse-shortcut-keys-for-workspace-and-project

http://www.codejava.net/servers/tomcat
http://www.vogella.com/tutorials/Eclipse/article.html
http://www.vogella.com/tutorials/Eclipse/article.html
http://www.summa-tech.com/blog/2009/05/19/top-10-not-so-popular-eclipse-shortcuts

http://www.javacodegeeks.com/2012/10/eclipse-refactoring-on-steroids.html

http://veerasundar.com/blog/2009/10/eclipse-tip-how-to-use-scrapbook-pages-in-eclipse/
https://sourcemaking.com/refactoring/remove-assignments-to-parameters







 

===========
Eclipse Plugin
(http://www.javacodegeeks.com/2012/05/top-10-most-popular-new-eclipse-plugins.html)
https://marketplace.eclipse.org/favorites/top?page=6

MAC — Installed Plugin

>ObjectAid UML Explorer  — 
>Findbugs
>Checkstyle 
>MoreUnit
>PMD
>MouseFeed
>EditBox
>nWire
>UMLet


>SpringIDE (http://springide.org/updatesite)  — Pending
>MavenIDE (http://mevenide.codehaus.org/release/eclipse/update)  -  Pending

http://editbox.sourceforge.net/updates/#sthash.IvuB1mav.dpuf


Debugging ====>  Move to Line ——>  Ctrl + R


======================================================================

Use External Tool Configuration > to run maven commands (no need m2e maven plugin)
use mvn eclipse:eclipse to Fix Maven dependency error in eclipse
MAVEN —>  local repository >>  setting.xml (maven installation)
		/Users/saravanan/.m2/repository



CODEMANSHIP - Youtube - Refactoring in eclipse



MAVEN
=====


mvn archetype:create -DgroupId=com.test -DartifactId=mytest    (create project using maven)


How do I perform an archetype:create from Eclipse?
=====================================================

Eclipse's External Tools

Name:			mvn archetype~create
Location:		C:\dev\apache-maven-2.0.8\bin\mvn.bat
Working Directory:	${workspace_loc}
Arguments:		archetype:create -DgroupId=${string_prompt:groupId} -DartifactId=${string_prompt:artifactId}

Eclipse > New → Project  > Java Project > 
Create project from existing source  > Select mytest project.


Set M2_REPO in JAVA > Build Path > class path variable > add M2_REPO pointing to maven repo.

External Tool configuration > eclipse:eclipse 

REFRESH

##created a maven project 
##imported it into Eclipse.
##update my Maven projec


How do I execute tests on my project?
=======================================

mvn test

let's create an External Tool Configuration for "mvn test".



How do I build my project?
============================
mvn package


How do I install a project artifact in my local maven repository?
========================================================================
mvn install

External Tool Configuration to perform a "mvn install" 

How do I use the maven clean phase?
========================================================================

mvm clean


How do I generate basic documentation for a project using maven site?
========================================================================

mvn clean site



How do I create a web application project using maven?
===========================================================

mvn archetype:create 
 -DarchetypeGroupId=org.apache.maven.archetypes 
 -DarchetypeArtifactId=maven-archetype-webapp 
 -DarchetypeVersion=1.0 
 -DgroupId=com.maventest 
 -DartifactId=mywebtest 
 -Dversion=1.0-SNAPSHOT


in Eclipse
External Tool Configuration

Name:			mvn archetype~create webapp
Location:		C:\dev\apache-maven-2.0.8\bin\mvn.bat
Working Directory:	${workspace_loc}
Arguments:		archetype:create -DarchetypeGroupId=org.apache.maven.archetypes -DarchetypeArtifactId=maven-archetype-webapp -DarchetypeVersion=1.0 -DgroupId=${string_prompt:groupId} -DartifactId=${string_prompt:artifactId}



How do I update my classpath with an Eclipse User Library via the maven eclipse plugin?
================================================================================================
if I execute the eclipse:eclipse goal on my project, it will update the project's classpathW to include the Tomcat user library.


<build>
		<finalName>mywebapp</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<inherited>true</inherited>
				<configuration>
					<classpathContainers>
						<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
						<classpathContainer>org.eclipse.jdt.USER_LIBRARY/TOMCAT_6.0.14_LIBRARY</classpathContainer>
					</classpathContainers>
				</configuration>
			</plugin>
		</plugins>
	</build>



How do I run a maven web application in Tomcat from Eclipse?
================================================================

add a Context entry to my Tomcat's server.xml file for the "mywebapp" project.
In Eclipse, I have a "_stuff" project that contains a link to my Tomcat's server.xml file for convenience. 
So, I'll double-click the server.xml link to open up the server.xml file in Eclipse's XMLW editor.

I'll add the following Context element to my Tomcat server.xml file. 

<Context docBase="C:\dev\workspace\mywebapp\src\main\webapp" path="/mywebapp" reloadable="true"/>

Now, I'll create an EclipseSW Debug Configuration to start up my project in TomcatSW. I named the Debug Configuration "mywebapp tomcat".

I specified the project to be "mywebapp". The Tomcat main class from the bootstrap.jar file is "org.apache.catalina.startup.Bootstrap".

On the Arguments tab, I specified the working directory to be my Tomcat home directory, which for me is C:\dev\apache-tomcat-6.0.14.

I clicked the Debug button to start up my project in Tomcat via Eclipse.

I went to a web browser and attempted to hit my "mywebapp" web application via http://localhost:8080/mywebapp. It worked!’


How do I package a basic maven web application?
=================================================

	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>servlet-api</artifactId>
		<version>2.5</version>
		<scope>provided</scope>
	</dependency>

mvn package



How do I deploy a maven web application to Tomcat?
======================================================
mvn tomcat:deploy

tomcat-users.xml

<?xml version='1.0' encoding='utf-8'?>
<tomcat-users>
  <role rolename="manager"/>
  <user username="test" password="test" roles="manager"/>
</tomcat-users>


In my settings.xml file

<server>
        <id>mytomcat</id>
        <username>test</username>
        <password>test</password>
</server>


Next, I added a tomcat-maven-plugin entry to the "mywebapp" project's pom.xml. 

<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<configuration>
					<url>http://192.168.1.7:8080/manager</url>
					<server>mytomcat</server>
					<path>/mywebapp</path>
				</configuration>
			</plugin>


External tool configuration
tomcat:deploy

Name:			mvn clean tomcat~deploy
Location:		C:\dev\apache-maven-2.0.8\bin\mvn.bat
Working Directory:	${project_loc}
Arguments:		clean tomcat:deploy


How do I redeploy a maven web application to Tomcat?
========================================================

mvn clean tomcat:undeploy tomcat:deploy

Name:			vn clean tomcat~undeploy tomcat~deploy
Location:		C:\dev\apache-maven-2.0.8\bin\mvn.bat
Working Directory:	${project_loc}
Arguments:		clean tomcat:undeploy tomcat:deploy

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<configuration>
					<url>http://192.168.1.7:8080/manager</url>
					<server>mytomcat</server>
					<path>/mywebapp</path>
				</configuration>
			</plugin>





External Tool Configuration
=============================

clean
clean install
clean package install
clean package site
clean test
eclipse:eclipse




Step by step ---  Eclipse Maven Tomcat deployment
-------------------------------------------------

1. Import Maven Project
2. Right click the projct -->  Maven --> Run Configuration --> tomcat:run
3. http://localhost:8080/<appname>

========================================================================



Workspace

Design Pattern
Spring 
JSF
Core JAVA

 
====================================================

Exercise

1. Copy Code in Eclipse Project Explorer as project   -- 	Completed
2. Try Scrap Book 			-- 			Completed
3. Maven Web project in Eclipse 		--  		Completed

Import
Run as" -> "Maven build..
Goals: package

4. Integrate Maven -- with Eclipse Via External Tool Configuration 


 

========================================================
 
 Eclipse -- Copy paste the class

paste on src on eclipse project --> it will create package with class

=========================================

Eclipse Faster Coding

1. Eclipse  --> preference  -> Java -> Editor -> Templates
2. NEW  button
3. Fill the template information as given below and save it
4. Use the template in any java source file using CTRL+SPACE
5. Add more templates from below link to Eclipse. 
6. ex. Logging template, JUnit Template

http://howtodoinjava.com/2014/05/22/create-eclipse-templates-for-faster-java-coding/

=============================================

How to use Scrapbook pages in Eclipse?

File -> New -> Other -> Java -> Java Run/Debug -> Scrapbook page.

Right Click -->  Inspect, Display, Execute 

===========================================================================


Assign the result of a method to a new Local Variable --

================================================================================

Code Template -- For Each

Eclipse -- Windows -- Preference -- Template 

try
while


===========================================================================

Save Actions

Let Eclipse handle boring tasks for you each time you are saving your code 

- Format Source Code 
- Organize imports

Java Editor -- Save Action

  
===========================================================================

Mulitiple Workspace


Show workspace Location in the TitleBar

eclipse.ini
 (-showLocation)

eclipse.exe properties > Shortcut > Target > append -showLocation - at the end

- - - - - -

Show workspace Name in the Title bar

(Window > preferences > General > Workspace )

default workspaces - (-data workspacePath) 


Window > Preferences > Java > Appearance > Abbreviate package names

==========================================================

Quick Outline > Ctrl + O

==========================================================

In Place Outline:  

In-place Outline: To pop up an in-place outline of the element at the current cursor position. + Ctrl F3 


==========================================================

Java -- Editor - Breadcrumb

==========================================================

use JavaStackTraceConsole

Copy the stack trace from log file and click 

Navigate > Open from Clipboard

Clicking on the exception name in stack trace will create an exception breakpoint. 
Clicking on the hyperlinks for Java Class Names wight line numbers to navigate. 

==========================================================
Paste Code on Package Explorer
- A new Java Project will be created and the file will be opened in the java editor

==========================================================

Window > Preferences > Java > Editor > Templates OR Templates view 

Default Templates




==========================================================

Block Selection

==========================================================
Split Editor -- 

Ctrl -
Ctrl {


==========================================================
Dont type too much yourself  > Let Eclipse help you with quick fixes, 

quick assists, refactorings, content assist and more. 

==========================================================

Types of Breakpoints

Line Breakpoint
Conditional Breakpoint
Exception Breakpoint 

Class Breakpoint
WatchPoint
Method Breakpoint


==========================================================

Eclipse: Convert String Concat to StringBuilder

==========================================================

Integrate Maven with Eclipse via External Tool Configuration

RUN > External Tool > External Tool Configuration  


During Eclipse development, it’s not practical to go outside of the Eclipse’s environment and execute Maven command in external console.

In this article, we show you how to integrate Maven command with Eclipse IDE, via Eclipse’s “External Tool Configuration“. Normally, this external tool is used to run external command within Eclipse environment, and it works prefectly with Maven command.


m2eclipse
Alternatively, you can install “m2eclipse Eclipse plugin“, which provides complete Maven integration for Eclipse IDE.

But, i do not like the plugin, because, Maven syntax comes with complete XSD support, and “External Tool Configuration” is work pretty well for me, just do not see any obvious benefits of installing this m2eclipse plugin.
==========================================================

Fix for Eclipse maven dependency error 

Windows > Preference > Java > Java — Build Path > class variable > 
M2_REPO

External Tool configuration
RUN > External Tool > External Tool Configuration  
Name:			mvn eclipse~eclipse
Location:		C:\dev\apache-maven-2.0.8\bin\mvn.bat
Working Directory:	${project_loc}
Arguments:		eclipse:eclipse

mvn eclipse:eclipse


==============================================================================

How do I open a browser window via Eclipse?
=============================================

External Tools
Program - New - 

IE - Google
Browse File System

C:\Program Files\nternet Explorer\iexplore.exe

Arguments:
http://www.google.com


http://localhost:8080/${project_name}/index.html



http://www.avajava.com/tutorials/lessons/how-do-i-open-a-browser-window-via-eclipse.html

==============================================================================

How do I open a Windows Explorer window via Eclipse?
====================================================

Easy Explore plug-in,
which can be downloaded from http://easystruts.sourceforge.net/.

External Tool configuration

Open in Explorer Window
C:\WINDOWS\explorer.exe
${resource_loc}


http://www.avajava.com/tutorials/lessons/how-do-i-open-a-windows-explorer-window-via-eclipse.html?page=2

================================================================================================


Eclipse Top PLugins

Eclipse Json Editor Plugin  - http://sourceforge.net/projects/eclipsejsonedit/

=================================================================================================

Adding 'Show in Windows Explorer' to Eclipse

Give the configuration a name
Working Directory —    ${env_var:SystemRoot}\explorer.exe
Arguments   —          /select,${resource_loc}


===========================================================================
Configure in all MAVEN web application - 

 		 	<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<configuration>
					<url>http://localhost:8080/manager/text</url>
					<server>myserver</server>
					<path>/CounterWebApp</path>
				</configuration>
			</plugin>

==============================================================================

Tomcat - setup 
————————

manager-script  — must configure.


<role rolename="manager-gui"/>
<role rolename="manager-script"/>
<role rolename="manager-jmx"/>
<role rolename="manager-status"/>
<role rolename="admin-gui"/>
<role rolename="admin-script"/>
<role rolename="admin"/>
<role rolename="manager"/>
 
<user username="admin" password="admin" roles="manager-gui,manager-status,admin-gui,admin-script,admin,manager, manager-script"/>
</tomcat-users>


================================================================================

MAC - External Tool Configuration

Open Tomcat Console

/Applications/Firefox.app/Contents/MacOS/firefox
http://localhost:8080/


Start Tomcat
————————————
/Users/saravanan/MyWork/JavaInstallation/apache-tomcat-7.0.39/bin/startup.sh

Stop Tomcat
————————————
/Users/saravanan/MyWork/JavaInstallation/apache-tomcat-7.0.39/bin/shutdown.sh

Open Finder
/usr/bin/open
${project_loc}


Maven Tomcat Deploy 
/Users/saravanan/MyWork/JavaInstallation/apache-maven-3.0.5/bin/mvn
${project_loc}
clean tomcat:deploy

Maven Tomcat - redeploy
/Users/saravanan/MyWork/JavaInstallation/apache-maven-3.0.5/bin/mvn
${project_loc}
clean tomcat:undeploy tomcat:deploy


Open Firefox
/usr/bin/open
-a Firefox.app http://localhost:8080/


========================================================================================================


TEMPLATES - For faster coding


sys  — ctrl + space

http://fahdshariff.blogspot.in/2011/08/useful-eclipse-templates-for-faster.html
https://github.com/sharfah/dotfiles/blob/master/.eclipse/templates.xml
>
if
for
strf
sysf
static final field
readfile
writefile
parsexml
Logger
logd
logi
logerr
logthrow
Junit - before
after
beforeclass
afterclass

http://stackoverflow.com/questions/1028858/useful-eclipse-java-code-templates
http://eclipse.dzone.com/news/effective-eclipse-custom-templ
https://github.com/simcap/templates/blob/master/useful-eclipse-templates.xml

http://www.eclipseonetips.com/2009/11/26/kill-the-code-zombies-with-editor-templates/
http://sevennet.org/2014/11/24/how-to-useful-eclipse-java-code-templates/

http://www.ffbit.com/blog/2012/10/22/eclipse-junit-4-code-templates/

WRITE Templates for JSF

======================================================================================================

ECLiPSE 

ALWAYS USE SAVE ACTONS  
—  Removes unused variable , imports,  Keeps code clean

ALT + SHFT + R
-	Rename Variable , Rename Class,  make Meaning FULL NAMES.

ALT + SHiFT + M 
-	EXTRACT Method  —  Smaller method, easy to test, 


EXTRACT Local Variable 
EXTRACT CONSTANT

Perspective ——>   Java Browsing           *********
Perspective ——>   Java Type Hiererachy    *********

 








