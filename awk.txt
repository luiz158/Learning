

http://www.catonmat.net/download/awk.cheat.sheet.pdf



 2 down vote accepted
	

I would use WinSCP script for this Here you have some good piece of documentation on how to do this. Example script :

# Automatically abort script on errors
option batch abort
# Disable overwrite confirmations that conflict with the previous
option confirm off
# Connect using a password
# open sftp://user:password@example.com -hostkey="ssh-rsa 1024 xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx"
# Connect
open sftp://user@example.com -hostkey="ssh-rsa 1024 xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx"
# Change remote directory
cd /home/user
# Force binary mode transfer
option transfer binary
# Download file to the local directory d:\
get examplefile.txt d:\
# Disconnect
close
# Connect as a different user
open user2@example.com
# Change the remote directory
cd /home/user2
# Upload the file to current working directory
put d:\examplefile.txt 
# Disconnect
close
# Exit WinSCP
exit

Then save it to example.txt and use this command :

winscp.exe /console /script=example.txt



====

http://the.earth.li/~sgtatham/putty/0.60/htmldoc/Chapter5.html

http://stackoverflow.com/questions/2139359/automatically-download-log-file-from-unix-server-to-windows-machine

http://winscp.net/eng/docs/scripting

C:\Program Files (x86)\GnuWin32\bin to your PATH.

http://gnuwin32.sourceforge.net/packages/gawk.htm

http://windows-powershell-scripts.blogspot.in/2009/06/awk-equivalent-in-windows-powershell.html


Content of test.csv for our testing

1,Tony Passaquale,7920,20090222 21:59:00,800,4.78,3824,Follow-up
2,Nigel Shan Shanford,30316,20090405 16:34:00,400,9.99,3996,New-Opportunity
3,Selma Cooper,97455,20090405 16:31:00,1000,9.99,9990,Pre-Approach
4,Allen James,95140,20090405 16:31:00,1000,9.99,9990,New-Opportunity


[jagadish.g@localhost Scripts]$ cat test.csv | awk -F, '{print $2}'
Tony Passaquale
Nigel Shan Shanford
Selma Cooper
Allen James



PS C:\Scripts> Get-Content .\test.csv | %{ $_.Split(',')[1]; }
Tony Passaquale
Nigel Shan Shanford
Selma Cooper
Allen James


Now, lets try getting the total value of third field in all the records in test.csv

[jagadish.g@localhost Scripts]$ cat test.csv | awk -F, '{total+=$3} END {print "Total: "total}'
Total: 230831


PS C:\Scripts> Get-Content .\test.csv | %{ [int]$total+=$_.Split(',')[2]; } ; Write-Host "Total: $total"
Total: 230831


e.g
cat file | awk -F: '{print $1,$3}'
I've tried
cat c:\numbers.txt | foreach {($_ -split ':')[0,2]}

Try this,

PS D:\> cat c:\numbers.txt | foreach {Write-Host ($_ -split ',')[0,2]}

awk '{ FS="|" } { print $2}' | sed s/" *"//

type fileName | foreach { ($_ -split "|")[1] -replace " *" "" }

http://www.7tutorials.com/simple-questions-what-powershell-what-can-you-do-it


